{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8ebd36db_fc2650c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-10-28T19:47:08Z",
      "side": 1,
      "message": "Looking at https://aomedia-review.googlesource.com/c/aom/+/194303, I think the preference might have been the preset method, rather than a new usage; it\u0027s a little confusing to have all-intra (which is mostly used for still pictures) and a still picture usage. I\u0027ll let Wan-Teh elaborate.\n\nIn general, with any change to add a preset or usage the tests should be extended to cover them. See `test/allintra_end_to_end_test.cc` for example.",
      "revId": "25c9cc3ab86aef5d55d1d9deb0a528b1478a6a15",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0102588_1b5b8494",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-10-28T22:13:14Z",
      "side": 1,
      "message": "James is right. I was suggesting using the preset method with the `AOM_USAGE_ALL_INTRA` usage.\n\nJingning (cc\u0027ed) added the `AOM_USAGE_ALL_INTRA` usage for AVIF still images. Although the name \"all intra\" suggests that this usage can also be used for all-intra videos, it is intended for still pictures. You can treat `AOM_USAGE_ALL_INTRA` as if it were named `AOM_USAGE_STILL_PICTURE`.\n\nWe should re-evaluate this if you need to make `AOM_USAGE_ALL_INTRA` unsuitable for all-intra videos. Do you anticipate this will happen? It\u0027s not clear why we might need to treat still pictures and all-intra videos differently...\n\nNote: We can always encode all-intra videos with the `AOM_USAGE_GOOD_QUALITY` usage and the `--kf_max_dist\u003d0` option. So it is not really a problem to make `AOM_USAGE_ALL_INTRA` unsuitable for all-intra videos.",
      "parentUuid": "8ebd36db_fc2650c1",
      "revId": "25c9cc3ab86aef5d55d1d9deb0a528b1478a6a15",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a826c93f_8549790f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-10-29T03:23:13Z",
      "side": 1,
      "message": "Got you James and Wan-Teh, your explanations makes sense. I\u0027m good with keeping everything under `AOM_USAGE_ALL_INTRA` if that\u0027s how it\u0027s been internally handled so far -- I just wasn\u0027t aware of that specific distinction until now.\n\nI don\u0027t anticipate any current or proposed improvements to be unsuitable for all-intra. I do expect bit allocation to significantly change with the new defaults (mostly in the form of low-contrast zones getting relatively more bits over high-contrast zones), but AFAICT all-intra doesn\u0027t by itself impose any additional rate-control constraints. Let me know if I might be missing anything.\n\nI\u0027ll close this CL, and that folds the new defaults into `AOM_USAGE_ALL_INTRA`.",
      "parentUuid": "c0102588_1b5b8494",
      "revId": "25c9cc3ab86aef5d55d1d9deb0a528b1478a6a15",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "25c9cc3ab86aef5d55d1d9deb0a528b1478a6a15",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "25c9cc3ab86aef5d55d1d9deb0a528b1478a6a15",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "25c9cc3ab86aef5d55d1d9deb0a528b1478a6a15",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}