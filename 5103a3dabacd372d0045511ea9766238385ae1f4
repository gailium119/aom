{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8ab68b79_bad6b529",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T21:04:29Z",
      "side": 1,
      "message": "I\u0027d like to read `av1_get_sbq_variance_boost()` again, but this looks good for a general review.",
      "revId": "5103a3dabacd372d0045511ea9766238385ae1f4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19d077b5_eb18f75b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-14T22:29:16Z",
      "side": 1,
      "message": "Thanks. Let me know if you have any questions.",
      "parentUuid": "8ab68b79_bad6b529",
      "revId": "5103a3dabacd372d0045511ea9766238385ae1f4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3dcca9c_81f58870",
        "filename": "aom/aomcx.h",
        "patchSetId": 11
      },
      "lineNbr": 1137,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T21:07:08Z",
      "side": 1,
      "message": "I think it would be good to link to the Variance Boost appendix in the SVT-AV1 doc as a general reference, either here or in the `av1_get_sbq_variance_boost()` function (assuming that is the entry point to the Variance Boost code).",
      "revId": "5103a3dabacd372d0045511ea9766238385ae1f4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7247019_fd02f609",
        "filename": "aom/aomcx.h",
        "patchSetId": 11
      },
      "lineNbr": 1137,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T21:53:18Z",
      "side": 1,
      "message": "Please do this in a follow-up CL.",
      "parentUuid": "d3dcca9c_81f58870",
      "revId": "5103a3dabacd372d0045511ea9766238385ae1f4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "480e3852_df14c4d2",
        "filename": "av1/encoder/ratectrl.c",
        "patchSetId": 11
      },
      "lineNbr": 174,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T21:04:29Z",
      "side": 1,
      "message": "Nit/optional: I think we can test these two conditions in the opposite order:\n\n```\n  while (qindex \u003c MAXQ \u0026\u0026 av1_convert_qindex_to_q(qindex, bit_depth) \u003c q) {\n```\n\nI.e., if `qindex` becomes `MAXQ`, then we will return it whether `av1_convert_qindex_to_q(qindex, bit_depth)` is less than `q` or not.",
      "revId": "5103a3dabacd372d0045511ea9766238385ae1f4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b8ffc84_c6e77f89",
        "filename": "av1/encoder/ratectrl.c",
        "patchSetId": 11
      },
      "lineNbr": 174,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-14T21:47:58Z",
      "side": 1,
      "message": "Agreed, it looks cleaner if those conditions are reversed. Is it okay if I change this (and adding the VB appendix link) with a follow-up CL?",
      "parentUuid": "480e3852_df14c4d2",
      "revId": "5103a3dabacd372d0045511ea9766238385ae1f4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b81a245_9ef4d61d",
        "filename": "av1/encoder/ratectrl.c",
        "patchSetId": 11
      },
      "lineNbr": 174,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T21:53:18Z",
      "side": 1,
      "message": "Yes, this is fine. I may post additional suggestions for this CL later.",
      "parentUuid": "9b8ffc84_c6e77f89",
      "revId": "5103a3dabacd372d0045511ea9766238385ae1f4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "5103a3dabacd372d0045511ea9766238385ae1f4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "5103a3dabacd372d0045511ea9766238385ae1f4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5103a3dabacd372d0045511ea9766238385ae1f4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "5103a3dabacd372d0045511ea9766238385ae1f4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}