{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ca26c25c_68d358eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-07T02:32:44Z",
      "side": 1,
      "message": "Wan-Teh: I rebased my changes so the new defaults are now set with the ssimulacra2 tune.",
      "revId": "213d961a40b9d8e0ea847601cafb0e3b3dd30dbb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d4e7869_e30ea6f9",
        "filename": "aom/aomcx.h",
        "patchSetId": 5
      },
      "lineNbr": 1692,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-07T18:35:19Z",
      "side": 1,
      "message": "Please add a comment to describe `AOM_TUNE_SSIMULACRA2`. I am sorry I forgot to add this comment when I added `AOM_TUNE_SSIMULACRA2`.\n\nThe comment should describe two things:\n1. A concise definition of AOM_TUNE_SSIMULACRA2. (This part is intended for libaom users and maintainers.) My [earlier attempt](https://aomedia-review.googlesource.com/c/aom/+/194662/1/av1/arg_defs.h) was \"improves the SSIMULACRA 2 score and subjective quality.\" The description in the commit message also looks good: \"increase image quality and\nconsistency, guided by the SSIMULACRA2 metric and subjective\nquality checks.\"\n2. Note that it shares the rdmult code for AOM_TUNE_SSIM. (This part is intended for libaom maintainers.) This explains changes like this one: https://aomedia-review.googlesource.com/c/aom/+/194662/5/av1/encoder/encoder.c",
      "revId": "213d961a40b9d8e0ea847601cafb0e3b3dd30dbb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "722636ff_064f596c",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1791,
      "author": {
        "id": 6585
      },
      "writtenOn": "2024-11-07T18:50:10Z",
      "side": 1,
      "message": "Optimal might be too strong, especially it is tuned for a special dataset.\nHow about being more specific: \"found to be beneficial for SIMMULACRA2 scores for images\".",
      "range": {
        "startLine": 1791,
        "startChar": 44,
        "endLine": 1791,
        "endChar": 54
      },
      "revId": "213d961a40b9d8e0ea847601cafb0e3b3dd30dbb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54e044b3_bce75507",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1791,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-07T20:06:41Z",
      "side": 1,
      "message": "The new QM function has been beneficial for other datasets (CID22, GB82), and some of our subjective quality evaluations (PSY team and a few others in the community), but I\u0027ll soften the claim.",
      "parentUuid": "722636ff_064f596c",
      "range": {
        "startLine": 1791,
        "startChar": 44,
        "endLine": 1791,
        "endChar": 54
      },
      "revId": "213d961a40b9d8e0ea847601cafb0e3b3dd30dbb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51c6c4c0_eeb13950",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1800,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-07T18:35:19Z",
      "side": 1,
      "message": "Cheng: Please review this.",
      "revId": "213d961a40b9d8e0ea847601cafb0e3b3dd30dbb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "212a195b_2ca017b5",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 2899,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-07T18:47:46Z",
      "side": 1,
      "message": "IMPORTANT: Should we undo the earlier changes here (lines 2883-2899) and restore it to the original state (but keep the comments you added for Cheng\u0027s original code)?\n\n```\n    // Special handling:\n    // By default, if omitted, --enable-cdef \u003d 1.\n    // Here we set its default value to 0 when --allintra is turned on.\n    // However, if users set --enable-cdef \u003d 1, either from the command line\n    // or aom_codec_control(), the encoder still respects it.\n    if (priv-\u003ecfg.g_usage \u003d\u003d AOM_USAGE_ALL_INTRA) {\n      // CDEF has been found to blur images, so it\u0027s disabled in all-intra mode\n      priv-\u003eextra_cfg.enable_cdef \u003d 0;\n    }\n```",
      "revId": "213d961a40b9d8e0ea847601cafb0e3b3dd30dbb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c93db496_9d16d6b5",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 2899,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-07T19:22:55Z",
      "side": 1,
      "message": "It seems that we should leave this unchanged, because the use of `aom_get_qmlevel_allintra()` is currently guarded by `cpi-\u003eoxcf.mode \u003d\u003d ALLINTRA`, without checking if --tune\u003dssimulacra2 is enabled.\n\nThe important thing is to avoid setting a default value in both places.",
      "parentUuid": "212a195b_2ca017b5",
      "revId": "213d961a40b9d8e0ea847601cafb0e3b3dd30dbb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06b82526_fda65d02",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 2899,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-07T20:06:41Z",
      "side": 1,
      "message": "\u003e It seems that we should leave this unchanged, because the use of `aom_get_qmlevel_allintra()` is currently guarded by `cpi-\u003eoxcf.mode \u003d\u003d ALLINTRA`, without checking if --tune\u003dssimulacra2 is enabled.\n\nThis is correct. For `--tune-ssimulacra2`, the code snippet above checks if `usage \u003d\u003d AOM_USAGE_ALL_INTRA`, which sets `enable-cdef \u003d 0`, then the code that parses the tune runs and sets `enable-cdef \u003d 3` if `tune \u003d\u003d AOM_TUNE_SSIMULACRA2`.\n\nI double-checked with aomenc this is what\u0027s happening in practice.\n\n\u003e The important thing is to avoid setting a default value in both places.\n\nIn this particular case, I think the checks should stay in their corresponding places, right? Because the allintra special handling happens before parsing the `extra_cfg`, and the ssimu2 tune special handling has to happen afterwards, as `tune` itself is an `extra_cfg` parameter.",
      "parentUuid": "c93db496_9d16d6b5",
      "revId": "213d961a40b9d8e0ea847601cafb0e3b3dd30dbb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ecf9a27_e2a0149f",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 2899,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-07T20:13:57Z",
      "side": 1,
      "message": "Oh, I see what you mean now. The new formula IS enabled for allintra, so the min and max values don\u0027t have to be defined in the tune section (as they\u0027re redundant). I\u0027ll go revert those.",
      "parentUuid": "06b82526_fda65d02",
      "revId": "213d961a40b9d8e0ea847601cafb0e3b3dd30dbb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}