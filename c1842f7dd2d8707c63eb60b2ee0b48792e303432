{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e014cf36_3e6bded3",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1078,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T23:33:17Z",
      "side": 1,
      "message": "Change \"int\" to \"unsigned int\"",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abcabe6a_3faf05d2",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1078,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-15T20:09:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e014cf36_3e6bded3",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69d86376_4c8f9ee0",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1088,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T23:33:17Z",
      "side": 1,
      "message": "Now that `variance` is an unsigned type, we can delete this assertion because this condition is guaranteed by the if statement immediately above.",
      "range": {
        "startLine": 1086,
        "startChar": 0,
        "endLine": 1088,
        "endChar": 24
      },
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6fa1288a_83dd5a03",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1088,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-15T20:09:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69d86376_4c8f9ee0",
      "range": {
        "startLine": 1086,
        "startChar": 0,
        "endLine": 1088,
        "endChar": 24
      },
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1c26ed8_069f66c3",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1096,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T23:33:17Z",
      "side": 1,
      "message": "Since `strength \u003c\u003d 4` and `variance \u003e\u003d 1` (which implies `log2((double)variance) \u003e\u003d 0`, this expression is at most 0.15 * 4 * 10.0 + 1.0 \u003d 7.0.\n\nTherefore, it will never exceed the current value of `VAR_BOOST_MAX_BOOST` (8.0).\n\nIs my analysis correct?\n\nSo the next line could be simplified to\n\n```\n  qstep_ratio \u003d AOMMAX(qstep_ratio, 1.0);\n```\n\nI think it is fine to keep the use of `fclamp()`, in case we modify the code here. I just wanted to confirm that I understand this code correctly.",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54afed4a_5c5100fa",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1096,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-15T20:09:27Z",
      "side": 1,
      "message": "Your analysis is correct.\n\nThe `fclamp()` is Variance Boost\u0027s way of making sure `qstep_ratio` is within usable limits, even when the implementation is modified. In practice, there\u0027s no use to go beyond `8.0` as it\u0027s overkill to have that much quantization granularity.",
      "parentUuid": "c1c26ed8_069f66c3",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb446b6f_777376df",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1109,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T23:33:17Z",
      "side": 1,
      "message": "Remove this minus sign and change `target_qindex - base_qindex` to `base_qindex - target_qindex` in the next line.\n\nI believe `target_qindex` is less than `base_qindex`. So `target_qindex - base_qindex` is always negative.",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0973bb40_70f9297d",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1109,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-15T20:09:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb446b6f_777376df",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b3b53dc_45876382",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1110,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T23:33:17Z",
      "side": 1,
      "message": "Replace `(255.0 + 1024.0)` with the sum to avoid interpreting this as 2^8 - 1 + 2^10 incorrectly.",
      "range": {
        "startLine": 1110,
        "startChar": 59,
        "endLine": 1110,
        "endChar": 73
      },
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de72e7a7_1390f909",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1110,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-15T20:09:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b3b53dc_45876382",
      "range": {
        "startLine": 1110,
        "startChar": 59,
        "endLine": 1110,
        "endChar": 73
      },
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd7b4e75_3dfbffa9",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1115,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T23:33:17Z",
      "side": 1,
      "message": "Since `boost` is positive, we should not need to clamp `base_qindex - boost` from above. We should be able to replace this with:\n\n```\n  int sb_qindex \u003d AOMMAX(base_qindex - boost, MINQ + 1);\n```",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28a38639_21a0642d",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 12
      },
      "lineNbr": 1115,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-15T20:09:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd7b4e75_3dfbffa9",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba7d24c5_ff4090ac",
        "filename": "av1/encoder/aq_variance.c",
        "patchSetId": 12
      },
      "lineNbr": 183,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-15T19:45:17Z",
      "side": 1,
      "message": "Nit: The name of this function suggests that it returns a variance boost, but it actually returns a variance. I guess we should name it \"av1_get_variance_boost_block_variance\" to be precise?",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1782281d_f527fcd1",
        "filename": "av1/encoder/aq_variance.c",
        "patchSetId": 12
      },
      "lineNbr": 183,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-15T20:09:27Z",
      "side": 1,
      "message": "Agreed, updated",
      "parentUuid": "ba7d24c5_ff4090ac",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fc791d1_a02fe9b6",
        "filename": "av1/encoder/aq_variance.c",
        "patchSetId": 12
      },
      "lineNbr": 190,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-14T23:33:17Z",
      "side": 1,
      "message": "We should be able to change the size of these two arrays to 8, to match `BLOCK_8X8` in line 208.",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e6cb173_10babf8a",
        "filename": "av1/encoder/aq_variance.c",
        "patchSetId": 12
      },
      "lineNbr": 190,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-15T20:09:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2fc791d1_a02fe9b6",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3e4713d_535e2741",
        "filename": "av1/encoder/aq_variance.c",
        "patchSetId": 12
      },
      "lineNbr": 208,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-15T19:45:17Z",
      "side": 1,
      "message": "Add:\n\n```\n  const uint16_t *all_zeros \u003d is_cur_buf_hbd(xd) ? CONVERT_TO_BYTEPTR(av1_highbd_all_zeros) : av1_all_zeros;\n```",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30ae3e7e_1fb1a2d9",
        "filename": "av1/encoder/aq_variance.c",
        "patchSetId": 12
      },
      "lineNbr": 208,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-15T20:09:27Z",
      "side": 1,
      "message": "By `uint16_t *`, you mean `uint8_t *`, right? That\u0027s what the `vf` function pointer accepts:\n\n```\ntypedef unsigned int (*aom_variance_fn_t)(const uint8_t *a, int a_stride,\n                                          const uint8_t *b, int b_stride,\n                                          unsigned int *sse);\n```",
      "parentUuid": "d3e4713d_535e2741",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0b81f95_b8c9d1ad",
        "filename": "av1/encoder/aq_variance.c",
        "patchSetId": 12
      },
      "lineNbr": 208,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-15T21:20:07Z",
      "side": 1,
      "message": "Yes. That should be `uint8_t`, not `uint16_t`. Sorry about the error.",
      "parentUuid": "30ae3e7e_1fb1a2d9",
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "988b496d_87bf3550",
        "filename": "av1/encoder/aq_variance.c",
        "patchSetId": 12
      },
      "lineNbr": 224,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-11-15T19:45:17Z",
      "side": 1,
      "message": "Replace the if-else statement with:\n\n```\n      variances[subb_i * SUBBLOCKS_IN_SB_DIM + subb_j] \u003d\n          vf(x-\u003eplane[0].src.buf + i * x-\u003eplane[0].src.stride + j,\n             x-\u003eplane[0].src.stride, all_zeros, 0, \u0026sse) /\n          64;\n```",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 224,
        "endChar": 7
      },
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30723d9c_807c8c8b",
        "filename": "av1/encoder/aq_variance.c",
        "patchSetId": 12
      },
      "lineNbr": 224,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-15T20:09:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "988b496d_87bf3550",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 224,
        "endChar": 7
      },
      "revId": "c1842f7dd2d8707c63eb60b2ee0b48792e303432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}