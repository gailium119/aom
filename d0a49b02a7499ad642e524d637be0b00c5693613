{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cb15ebd6_87346e06",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 5
      },
      "lineNbr": 1079,
      "author": {
        "id": 6585
      },
      "writtenOn": "2024-11-08T22:13:50Z",
      "side": 1,
      "message": "nit: braces can be removed.",
      "range": {
        "startLine": 1077,
        "startChar": 2,
        "endLine": 1079,
        "endChar": 3
      },
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c24f8fe_e9eb9686",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 5
      },
      "lineNbr": 1079,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-09T02:12:16Z",
      "side": 1,
      "message": "Hmm, it was my understanding with Wan-Teh that using braces for one-liner clauses was the preferred way. Let me know if this isn\u0027t the case.",
      "parentUuid": "cb15ebd6_87346e06",
      "range": {
        "startLine": 1077,
        "startChar": 2,
        "endLine": 1079,
        "endChar": 3
      },
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "697f99f2_aa227a95",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 5
      },
      "lineNbr": 1087,
      "author": {
        "id": 6585
      },
      "writtenOn": "2024-11-08T22:13:50Z",
      "side": 1,
      "message": "variance must be greater than 1, right?\nPerhaps, add an assertion would help make that clear.",
      "range": {
        "startLine": 1087,
        "startChar": 56,
        "endLine": 1087,
        "endChar": 64
      },
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc1cc95c_de2aa69c",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 5
      },
      "lineNbr": 1087,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-09T02:12:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "697f99f2_aa227a95",
      "range": {
        "startLine": 1087,
        "startChar": 56,
        "endLine": 1087,
        "endChar": 64
      },
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f575c4ff_44c67c2c",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 5
      },
      "lineNbr": 1094,
      "author": {
        "id": 6585
      },
      "writtenOn": "2024-11-08T22:13:50Z",
      "side": 1,
      "message": "Could you add comments to explain the equation?",
      "range": {
        "startLine": 1092,
        "startChar": 0,
        "endLine": 1094,
        "endChar": 80
      },
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54a0b24a_07d06872",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 5
      },
      "lineNbr": 1094,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-09T02:12:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f575c4ff_44c67c2c",
      "range": {
        "startLine": 1092,
        "startChar": 0,
        "endLine": 1094,
        "endChar": 80
      },
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b96a2642_127a8039",
        "filename": "av1/encoder/allintra_vis.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 6585
      },
      "writtenOn": "2024-11-08T22:13:50Z",
      "side": 1,
      "message": "I prefer to make the name shorter: VAR_BOOST_MAX_BOOST",
      "range": {
        "startLine": 26,
        "startChar": 8,
        "endLine": 26,
        "endChar": 39
      },
      "fixSuggestions": [
        {
          "fixId": "9414df9d_66ded0cf",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "av1/encoder/allintra_vis.h",
              "range": {
                "startLine": 26,
                "startChar": 0,
                "endLine": 27,
                "endChar": 0
              },
              "replacement": "#define VAR_BOOST_MAX_BOOST 8\n"
            }
          ]
        }
      ],
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a39d7a6b_de72c6c2",
        "filename": "av1/encoder/allintra_vis.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-09T02:12:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b96a2642_127a8039",
      "range": {
        "startLine": 26,
        "startChar": 8,
        "endLine": 26,
        "endChar": 39
      },
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0232b981_17574d68",
        "filename": "av1/encoder/aq_variance.c",
        "patchSetId": 5
      },
      "lineNbr": 216,
      "author": {
        "id": 6585
      },
      "writtenOn": "2024-11-08T22:13:50Z",
      "side": 1,
      "message": "What is the motivation/justification of taking the 40/64 8x8 block\u0027s variance as the variance of this 64x64 block?",
      "range": {
        "startLine": 216,
        "startChar": 2,
        "endLine": 216,
        "endChar": 49
      },
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a66f50e_44138087",
        "filename": "av1/encoder/aq_variance.c",
        "patchSetId": 5
      },
      "lineNbr": 216,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-09T01:47:33Z",
      "side": 1,
      "message": "**Short explanation**: experimentally, doing it this way helps maximize image quality and consistency by both SSIMU2 and subjective quality, while minimizing bitrate allocation waste that comes from encoding high-variance regions with too low of a qindex.\n\n**Long explanation**: there are two main motivations to do it this way:\n\n1. Dividing the 64x64 into 64 8x8 blocks helps the algorithm determine how many subregions are high variance vs low variance (e.g. tree branches meeting the sky).\n2. The octile acts as a \"pickiness\" factor when boosting a superblock.\n  - At one extreme, an octile of 1 will fully boost a block if only 1/8th of the superblock is low variance. In practice, this results in excessive bit waste as the large high variance subregions are boosted alongside the tiny low variance ones.\n  - At the other extreme, an octile of 8 will only boost blocks when the *entire* superblock is low variance. In practice, this means that images will have ugly unboosted \"holes\" where superblocks didn\u0027t get boosted just because the tiniest high contrast feature snuck in.\n  \nKnowing all of this, we (the PSY team) tested with all the octile values and determined an octile of 5 strikes a balance between image consistency and bit savings.\n\nHere\u0027s a good visual representation of how varying the octile affects images with mixed high-variance/low-variance sections: https://gitlab.com/AOMediaCodec/SVT-AV1/-/blob/master/Docs/Appendix-Variance-Boost.md#--variance-octile-1-8",
      "parentUuid": "0232b981_17574d68",
      "range": {
        "startLine": 216,
        "startChar": 2,
        "endLine": 216,
        "endChar": 49
      },
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "781d9886_1e70b3a2",
        "filename": "av1/encoder/encodeframe.c",
        "patchSetId": 5
      },
      "lineNbr": 1952,
      "author": {
        "id": 6585
      },
      "writtenOn": "2024-11-08T22:13:50Z",
      "side": 1,
      "message": "Could you explain how is delta_q_res used in variance boost? Thanks.",
      "range": {
        "startLine": 1952,
        "startChar": 23,
        "endLine": 1952,
        "endChar": 34
      },
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51758260_ce6db1b5",
        "filename": "av1/encoder/encodeframe.c",
        "patchSetId": 5
      },
      "lineNbr": 1952,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-11-09T01:47:33Z",
      "side": 1,
      "message": "There\u0027s a comment in `aom_get_variance_boost_delta_q_res()` that explains the rationale behind picking the best `delta_q_res`. Let me know if this clarifies your question.",
      "parentUuid": "781d9886_1e70b3a2",
      "range": {
        "startLine": 1952,
        "startChar": 23,
        "endLine": 1952,
        "endChar": 34
      },
      "revId": "d0a49b02a7499ad642e524d637be0b00c5693613",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}